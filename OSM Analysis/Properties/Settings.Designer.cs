//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OSM_Analysis.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.4.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("mapsuser")]
        public string username {
            get {
                return ((string)(this["username"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("mapsuser")]
        public string password {
            get {
                return ((string)(this["password"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Server= DESKTOP-OQ25EPJ\\LOCALDB#B598D17C; Database= OSM_Bing")]
        public string url {
            get {
                return ((string)(this["url"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public int noOfRuns {
            get {
                return ((int)(this["noOfRuns"]));
            }
            set {
                this["noOfRuns"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5000")]
        public int fromToMinDist {
            get {
                return ((int)(this["fromToMinDist"]));
            }
            set {
                this["fromToMinDist"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("200")]
        public int tolerance {
            get {
                return ((int)(this["tolerance"]));
            }
            set {
                this["tolerance"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("SELECT * from COORDINATES where CITY = \'<AREA>\';")]
        public string areaSelectQuery {
            get {
                return ((string)(this["areaSelectQuery"]));
            }
            set {
                this["areaSelectQuery"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Server= DESKTOP-OQ25EPJ\\LOCALDB#B598D17C; Database= OSM_Bing; User ID = mapsuser;" +
            " Password=mapsuser")]
        public string jdbcUrl {
            get {
                return ((string)(this["jdbcUrl"]));
            }
            set {
                this["jdbcUrl"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DECLARE @source geography = \'POINT(<POINT1_COR>)\' DECLARE @target geography = \'PO" +
            "INT(<POINT2_COR>)\' SELECT @source.STDistance(@target) as VALUE;")]
        public string disQuery {
            get {
                return ((string)(this["disQuery"]));
            }
            set {
                this["disQuery"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DECLARE @g geography; SET @g = geography::STGeomFromText(\'LINESTRING(<CORDINATE_S" +
            "TRING>)\', 4326); DECLARE @source geography = \'POINT(<OSM_POINT>)\';  SELECT @sour" +
            "ce.STDistance(@g) as VALUE;")]
        public string MinDistanceQuery {
            get {
                return ((string)(this["MinDistanceQuery"]));
            }
            set {
                this["MinDistanceQuery"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Select * from AREA_DEF where CITY = \'<CITY>\' and STATE = \'<STATE>\' and COUNTRY = " +
            "\'<COUNTRY>\' order by MAX_DEF_RANGE;")]
        public string AreaDefQuery {
            get {
                return ((string)(this["AreaDefQuery"]));
            }
            set {
                this["AreaDefQuery"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DELETE from AREA_DEF where CITY = \'<CITY>\';")]
        public string ClearPrevAreaDefEntries {
            get {
                return ((string)(this["ClearPrevAreaDefEntries"]));
            }
            set {
                this["ClearPrevAreaDefEntries"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("INSERT INTO AREA_DEF\r\n  ([CITY]\r\n  ,[STATE]\r\n  ,[COUNTRY]\r\n  ,[MAX_DEF_RANGE]\r\n  " +
            ",[AVG_DEFLECTION]\r\n  ,[DATASET_PTS_COUNT]) VALUES \r\n  (\'<CITY>\'\r\n  ,\'<STATE>\'\r\n " +
            " ,\'<COUNTRY>\'\r\n  ,<MAX_DEF_RANGE>\r\n  ,<AVG_DEFLECTION>\r\n  ,<DATASET_PTS_COUNT>);" +
            "")]
        public string AreaDefInsertQuery {
            get {
                return ((string)(this["AreaDefInsertQuery"]));
            }
            set {
                this["AreaDefInsertQuery"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Select * from HEATMAP where CITY = \'<CITY>\' and STATE = \'<STATE>\' and COUNTRY = \'" +
            "<COUNTRY>\' ORDER BY LAT_MAX;")]
        public string HeatmapSelectQuery {
            get {
                return ((string)(this["HeatmapSelectQuery"]));
            }
            set {
                this["HeatmapSelectQuery"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("INSERT INTO [HEATMAP]\r\n  ([CITY]\r\n  ,[STATE]\r\n  ,[COUNTRY]\r\n  ,[LAT_MAX]\r\n  ,[LON" +
            "G_MAX]\r\n  ,[AVG_DEFLECTION]\r\n  ,[DATASET_PTS_COUNT])\r\n  VALUES\r\n  (<CITY>\r\n  ,<S" +
            "TATE>\r\n  ,<COUNTRY>\r\n  ,<LAT_MAX>\r\n  ,<LONG_MAX>\r\n  ,<AVG_DEFLECTION>\r\n  ,<DATAS" +
            "ET_PTS_COUNT>)")]
        public string HeatMapInsertionQuery {
            get {
                return ((string)(this["HeatMapInsertionQuery"]));
            }
            set {
                this["HeatMapInsertionQuery"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DELETE from HEATMAP where CITY = \'<CITY>\';")]
        public string ClearPrevHeatmapEntries {
            get {
                return ((string)(this["ClearPrevHeatmapEntries"]));
            }
            set {
                this["ClearPrevHeatmapEntries"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("asd")]
        public string Setting2 {
            get {
                return ((string)(this["Setting2"]));
            }
            set {
                this["Setting2"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("INSERT INTO COORDINATES ([CITY] ,[Lat] ,[Long] ,[Priority]) VALUES (\'<AREA>\', <LA" +
            "T>, <LON> , 1)")]
        public string InsertCoordinateQuery {
            get {
                return ((string)(this["InsertCoordinateQuery"]));
            }
            set {
                this["InsertCoordinateQuery"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("DELETE from GOOGLE_HEATMAP where CITY = \'<CITY>\';")]
        public string ClearPrevGoogleHeatmap {
            get {
                return ((string)(this["ClearPrevGoogleHeatmap"]));
            }
            set {
                this["ClearPrevGoogleHeatmap"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"INSERT INTO [GOOGLE_HEATMAP]
  ([CITY]
  ,[STATE]
  ,[COUNTRY]
  ,[LAT_MAX]
  ,[LONG_MAX]
  ,[AVG_DEFLECTION]
  ,[DATASET_PTS_COUNT])
  VALUES
  (<CITY>
  ,<STATE>
  ,<COUNTRY>
  ,<LAT_MAX>
  ,<LONG_MAX>
  ,<AVG_DEFLECTION>
  ,<DATASET_PTS_COUNT>)
")]
        public string GoogleHeatMapInsertionQuery {
            get {
                return ((string)(this["GoogleHeatMapInsertionQuery"]));
            }
            set {
                this["GoogleHeatMapInsertionQuery"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Select * from GOOGLE_HEATMAP where CITY = \'<CITY>\' and STATE = \'<STATE>\' and COUN" +
            "TRY = \'<COUNTRY>\' ORDER BY LAT_MAX;")]
        public string GoogleHeatmapSelectQuery {
            get {
                return ((string)(this["GoogleHeatmapSelectQuery"]));
            }
            set {
                this["GoogleHeatmapSelectQuery"] = value;
            }
        }
    }
}
